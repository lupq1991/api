<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.phoenix.api.dao.GroupMapper">
    <resultMap id="BaseResultMap" type="com.cn.phoenix.api.pojo.Group">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <select id="selectById" resultMap="BaseResultMap">
        select `name`,info from `group` where id = #{id}
    </select>
    <select id="selectGroupByUser" resultMap="BaseResultMap">
        select g.id, g.name, g.status, g.info, g.create_time, g.update_time
        from `user_group` ug
        left join `group` g on g.id = ug.group_id
        left join `user` u on u.id = ug.user_id
        where u.id = #{userId}
    </select>
    <insert id="oneInsert" parameterType="com.cn.phoenix.api.pojo.Group">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into
        `group` (`name`, status, info)
        values (#{name}, #{status}, #{info})
    </insert>
    <update id="oneUpdate" parameterType="com.cn.phoenix.api.pojo.Group">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        update `group` set
        `name` = #{name},
        status = #{status},
        info = #{info}
        where id = #{id}
    </update>
    <delete id="oneDelete" parameterType="com.cn.phoenix.api.pojo.Group">
        delete from `group` where id = #{id}
    </delete>
    <select id="selectGroupHaveOtherUser" resultMap="BaseResultMap">
        select g.id, g.name, g.status, g.info, g.create_time, g.update_time
        from `user_group` ug
        left join `group` g on g.id = ug.group_id
        left join `user` u on u.id = ug.user_id
        where g.id = #{id}
        and u.id != #{userId}
    </select>
</mapper>