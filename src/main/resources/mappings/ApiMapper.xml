<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.phoenix.api.dao.ApiMapper">
    <resultMap id="BaseResultMap" type="com.cn.phoenix.api.pojo.Api">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="aes_encryption" jdbcType="VARCHAR" property="aesEncryption"/>
        <result column="aes_decryption" jdbcType="VARCHAR" property="aesDecryption"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <collection property="cases" ofType="com.cn.phoenix.api.pojo.Cases" column="cases">
            <id column="cases_id" jdbcType="INTEGER" property="id"/>
            <result column="case_name" jdbcType="VARCHAR" property="name"/>
            <result column="api_id" jdbcType="INTEGER" property="apiId"/>
            <result column="request" jdbcType="INTEGER" property="request"/>
            <result column="content" jdbcType="INTEGER" property="content"/>
            <result column="md5_encryption" jdbcType="VARCHAR" property="md5Encryption"/>
            <result column="case_aes_encryption" jdbcType="VARCHAR" property="aesEncryption"/>
            <result column="case_aes_decryption" jdbcType="VARCHAR" property="aesDecryption"/>
            <result column="is_result_variable" jdbcType="VARCHAR" property="isResultVariableString"/>
            <result column="is_use_result" jdbcType="INTEGER" property="isUseResult"/>
            <result column="case_status" jdbcType="INTEGER" property="status"/>
            <result column="is_use_result" jdbcType="INTEGER" property="isUseResult"/>
            <result column="case_info" jdbcType="VARCHAR" property="info"/>
            <result column="case_create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="case_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <association property="check" javaType="com.cn.phoenix.api.pojo.Check" column="check">
                <id column="check_id" jdbcType="INTEGER" property="id"/>
                <result column="check_case_id" jdbcType="INTEGER" property="caseId"/>
                <result column="type" jdbcType="INTEGER" property="type"/>
                <result column="status_code" jdbcType="INTEGER" property="statusCode"/>
                <result column="content_type" jdbcType="INTEGER" property="contentType"/>
                <result column="check_content" jdbcType="VARCHAR" property="content"/>
                <result column="regular_key" jdbcType="VARCHAR" property="regularKey"/>
                <result column="regular_value" jdbcType="VARCHAR" property="regularValue"/>
                <result column="check_create_time" jdbcType="TIMESTAMP" property="createTime"/>
                <result column="check_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            </association>
            <collection property="parameter" ofType="com.cn.phoenix.api.pojo.Parameter" column="parameter">
                <id column="parameter_id" jdbcType="INTEGER" property="id"/>
                <result column="case_id" jdbcType="INTEGER" property="caseId"/>
                <result column="parameter_key" jdbcType="VARCHAR" property="key"/>
                <result column="parameter_value" jdbcType="VARCHAR" property="value"/>
                <result column="json_str" jdbcType="VARCHAR" property="jsonStr"/>
                <result column="parameter_info" jdbcType="VARCHAR" property="info"/>
                <result column="parameter_create_time" jdbcType="TIMESTAMP" property="createTime"/>
                <result column="parameter_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            </collection>
            <collection property="headers" ofType="com.cn.phoenix.api.pojo.Header" column="headers">
                <id column="header_id" jdbcType="INTEGER" property="id"/>
                <result column="header_key" jdbcType="VARCHAR" property="key"/>
                <result column="header_value" jdbcType="VARCHAR" property="value"/>
                <result column="header_is_use_result" jdbcType="INTEGER" property="isUseResult"/>
            </collection>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id,project_id, `name`, path, status,aes_enc aes_encryption,aes_dec aes_decryption, info, create_time, update_time
  </sql>
    <select id="findAllInfo" resultMap="BaseResultMap" parameterType="list">
        select
        a.id,a.name,a.path,a.status,a.aes_enc aes_encryption,a.aes_dec aes_decryption,
        a.info,a.create_time,c.update_time,
        c.id cases_id,c.name case_name,c.request,c.content,c.status case_status,
        c.info case_info, c.create_time case_createTime,c.update_time case_updateTime,
        c.md5_enc md5_encryption,c.aes_enc case_aes_encryption,c.aes_dec case_aes_decryption,
        c.is_result_variable,c.is_use_result,
        p.id parameter_id,p.case_id,p.key parameter_key,p.value parameter_value,p.json_str,p.info parameter_info,
        p.create_time parameter_create_time,p.update_time parameter_update_time,
        h.id header_id,h.key header_key,h.value header_value,h.is_use_result header_is_use_result,
        ch.type,ch.status_code,ch.content_type,ch.content check_content,ch.regular_key,ch.regular_value
        from api a
        left join cases c on a.id = c.api_id
        left join parameter p on c.id = p.case_id
        left join header h on c.id = h.case_id
        left join `check` ch on c.id = ch.case_id
        where 1 = 1
        <if test="list.size() > 0">
            and
            <foreach collection="list" item="item" open="(" separator="," close=")">
                <if test="item.apiIdList.size() > 0">
                    a.id in
                    <foreach collection="item.apiIdList" item="apiId" open="(" separator="," close=")">
                        #{apiId}
                    </foreach>
                </if>
                <if test="item.caseIdList.size() > 0">
                    and c.id in
                    <foreach collection="item.caseIdList" item="caseId" open="(" separator="," close=")">
                        #{caseId}
                    </foreach>
                </if>
            </foreach>
        </if>
    </select>
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from api
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
    delete from api
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="oneInsert" parameterType="com.cn.phoenix.api.pojo.Api">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into api
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="aesEncryption != null">
                aes_enc,
            </if>
            <if test="aesDecryption != null">
                aes_dec,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="aesEncryption != null">
                #{aesEncryption},
            </if>
            <if test="aesDecryption != null">
                #{aesDecryption},
            </if>
        </trim>
    </insert>
    <update id="updateById" parameterType="com.cn.phoenix.api.pojo.Api">
    update api
    set name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      aes_enc = #{aesEncryption},
      aes_dec = #{aesDecryption}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findAll" resultType="com.cn.phoenix.api.pojo.Api">
        select
        <include refid="Base_Column_List"/>
        from api
        where project_id in
        <foreach collection="projectIdList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="projectId != null">
            and project_id = #{projectId}
        </if>
    </select>
    <select id="findApiByPath" resultType="com.cn.phoenix.api.pojo.Api">
        select
        <include refid="Base_Column_List"/>
        from api
        where path = #{path}
    </select>
    <select id="checkUnique" resultType="com.cn.phoenix.api.pojo.Api">
        select
        <include refid="Base_Column_List"/>
        from api
        where path = #{path} and id != #{id}
    </select>
</mapper>